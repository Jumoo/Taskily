@model TaskilyWeb.Models.Survey


<div class="col-xs-12 col-md-offset-1 col-md-6">
    @using (Html.BeginForm("EditBasic", "Survey"))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.ID)
        @Html.HiddenFor(m => m.OrganisationID)

        <div class="form-group">
            @Html.LabelFor(m => m.Name)
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control input-lg" })
        </div>

        <div class="form-group">
            <div class="checkbox">
                <label class="radio inline control-label big-radio">
                    @Html.CheckBoxFor(m => m.Active, new { @class = "input-lg" })
                    Open
                </label>
                <span class="help-block">People can fill this survey in
                at:<br/>
                <a href="/public/@Model.UID">@Html.Raw(string.Format("{0}://{1}{2}", Request.Url.Scheme, Request.Url.Authority, Url.Content("~")))public/@Model.UID</a>
                </span>
            </div>
        </div>
        
        <hr />

    <div class="form-group">
        @Html.LabelFor(m => m.TaskCount)
        @Html.EditorFor(m => m.TaskCount, new { htmlAttributes = new { @class = "form-control input-lg" } })
        <span class="help-block">Number of tasks you want users to pick.<br /> Currently, you have @Model.Tasks.Where(t => t.Active == true).Count() active tasks in total.</span>
    </div>
        
        <hr />

        if (Model.organisation.AccountType != TaskilyWeb.Models.OrgAccountType.free)
        {
        <div class="form-group">
            <div class="checkbox">
                <label class="radio inline control-label big-radio">
                    @Html.CheckBoxFor(m => m.PublicResults, new { @class = "input-lg" })
                    Public Results
                </label>
                <span class="help-block">Make the results public.</span>
            </div>
        </div>
        }
        
        <div class="form-group">
            @Html.ActionLink("Get the survey popup code", "popup", new { @id = @Model.ID })
        </div>

        <div class="form-group">
            <input type="submit" class="btn btn-lg btn-primary" value="Save" />
            @Html.ActionLink("Cancel", "Edit", new { @id = Model.ID }, new { @class = "btn btn-lg btn-danger" })
        </div>
    }
</div>

<div class="col-md-5">
    <div class="edit-sidebar">
        @Html.ContentBlob("taskily/survey/edit_details")
    </div>
</div>
