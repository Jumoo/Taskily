@model TaskilyWeb.Models.Organisation

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layoutheader.cshtml";
}

@section Heading {
    <h2>Your Organisation</h2>
}
<div class="row">
    <div class="col-md-8">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <div class="page-header">
                    <h3>Organisation</h3>
                </div>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AccountType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @if (ViewBag.IsAdmin)
                        {
                            @Html.EnumDropDownListFor(m => m.AccountType, new { @class = "form-control input-lg" })
                        }
                        else
                        {
                            @Html.DisplayFor(model => model.AccountType)
                        }
                        @Html.ValidationMessageFor(model => model.AccountType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TrialDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DisplayFor(model => model.TrialDate)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

    </div>

    <div class="col-md-4">
        @if (Model.AccountType == TaskilyWeb.Models.OrgAccountType.free)
        {
            @Html.ContentBlob("taskily/hosted/upgrade-free")
        }
        else
        {
            @Html.ContentBlob("taskily/hosted/upgrade-standard")
        }
        <div>
            @Html.ActionLink("Upgrade", "Index", "Upgrade", new { }, new { @class = "btn btn-success btn-lg" })
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
